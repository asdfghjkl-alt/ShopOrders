{"version":3,"sources":["components/Product/AllProduct.js","components/Title.js","components/Product/Product.js"],"names":["ProductList","products","useContext","ProductContext","filter","item","onShelf","useState","state","setState","brands","setBrands","tempBrands","setTempBrands","fetchData","useCallback","newList","forEach","push","company","names","v","i","indexOf","useEffect","Fragment","className","style","paddingTop","map","key","type","name","onChange","includes","index","x","value","ind","arr","product","length","handleChangeCheck","e","target","lc","title","toLowerCase","placeholder","_id","Title","props","Product","img","price","stock","context","process","to","toString","src","alt","width","height","onClick","addToCart","borderRadius","disabled"],"mappings":"kNA8IeA,UAxIf,WACE,IAEIC,EAFYC,qBAAWC,KAEJF,SAEvBA,EAAWA,EAASG,QAAO,SAACC,GAAD,OAA2B,IAAjBA,EAAKC,WALrB,MAOKC,mBAASN,GAPd,mBAOdO,EAPc,KAOPC,EAPO,OAQOF,mBAAS,IARhB,mBAQdG,EARc,KAQNC,EARM,OASeJ,mBAAS,IATxB,mBASdK,EATc,KASFC,EATE,KAWfC,EAAYC,uBAAY,WAC5B,IAAIC,EAAU,GACdf,EAASgB,SAAQ,SAACZ,GAChBW,EAAQE,KAAKb,EAAKc,YAEpB,IAASC,EACTJ,GADSI,EACGJ,GADaZ,QAAO,SAACiB,EAAGC,GAAJ,OAAUF,EAAMG,QAAQF,KAAOC,KAE/DX,EAAUK,KACT,IA0EH,OAxEAQ,qBAAU,WACRV,MACC,CAACA,IAuEF,kBAAC,IAAMW,SAAP,KACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,uBAAuBC,MAAO,CAAEC,WAAY,QACxDlB,EAAOmB,KAAI,SAACxB,GACX,OACE,kBAAC,IAAMoB,SAAP,CAAgBK,IAAKzB,GACnB,2BACE0B,KAAK,WACLC,KAAK,UACLN,UAAU,WACVO,SAAU,YA9CA,SAAC5B,GACzB,IAAIW,EAAU,GAEd,GAAIJ,EAAWsB,SAAS7B,GAAO,CAC7B,IAAM8B,EAAQvB,EAAWW,QAAQlB,GAC7B+B,EAAIxB,EACRwB,EAAIA,EAAEhC,QAAO,SAAUiC,EAAOC,EAAKC,GACjC,OAAOD,IAAQH,KAEjBtB,EAAcuB,GAEdnC,EAASgB,SAAQ,SAACuB,GACZ5B,EAAWsB,SAASM,EAAQrB,UAC9BH,EAAQE,KAAKsB,MAGjB/B,EAASO,GAEQ,IAAboB,EAAEK,QACJhC,EAASR,OAEN,CACL,IAAMmC,EAAIxB,EACVwB,EAAElB,KAAKb,GACPQ,EAAcuB,GAEdnC,EAASgB,SAAQ,SAACuB,GACZ5B,EAAWsB,SAASM,EAAQrB,UAC9BH,EAAQE,KAAKsB,MAGjB/B,EAASO,IAgBK0B,CAAkBrC,MAGtB,2BAAOqB,UAAU,wBAAwBrB,QAKjD,yBAAKqB,UAAU,sBACb,2BACEK,KAAK,OACLL,UAAU,eACVO,SA5FW,SAACU,GAEpB,IAAI3B,EAAU,GAGS,KAAnB2B,EAAEC,OAAOP,OACXrB,EAAUR,EAAMJ,QAAO,SAACC,GAEtB,IAAMwC,EAAKxC,EAAKyC,MAAMC,cAEhB3C,EAASuC,EAAEC,OAAOP,MAAMU,cAI9B,OAAOF,EAAGX,SAAS9B,MAErBK,EAASO,IAEiB,IAAtBJ,EAAW6B,QACbxC,EAASgB,SAAQ,SAACuB,GACZ5B,EAAWsB,SAASM,EAAQrB,UAC9BH,EAAQE,KAAKsB,MAIjB/B,EAASO,IAETP,EAASR,IAkEL+C,YAAY,cAEd,kBAAC,IAAD,CAAOhB,KAAK,MAAMc,MAAO,aACzB,yBAAKpB,UAAU,OACM,IAAlBhB,EAAO+B,OACJxC,EAAS4B,KAAI,SAACW,GACZ,OAAO,kBAAC,IAAD,CAASV,IAAKU,EAAQS,IAAKT,QAASA,OAE7ChC,EAAMqB,KAAI,SAACW,GACT,OAAO,kBAAC,IAAD,CAASV,IAAKU,EAAQS,IAAKT,QAASA,a,gCCrI7D,sDAEe,SAASU,EAAMC,GAC1B,OACI,yBAAKzB,UAAW,OACZ,yBAAKA,UAAW,8CACZ,wBAAIA,UAAU,oCACTyB,EAAMnB,KADX,IACiB,4BAAQN,UAAY,aAAayB,EAAML,Y,gCCPxE,2CAuDeM,IAjDf,SAAiBD,GAAQ,IAAD,EACoBA,EAAMX,QAAxCM,EADc,EACdA,MAAOO,EADO,EACPA,IAAKC,EADE,EACFA,MAAOL,EADL,EACKA,IAAKM,EADV,EACUA,MAC1BC,EAAUtD,qBAAWC,KACvBiC,EAAIqB,kDAAkDJ,EAC1D,OACE,yBAAK3B,UAAU,wCACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMgC,GAAI,YAAcT,EAAIU,YAC1B,yBACEC,IAAKxB,EACLyB,IAAI,UACJnC,UAAU,eACVC,MAAO,CAAEmC,MAAO,OAAQC,OAAQ,WAGpC,4BACEC,QAAS,WACPR,EAAQS,UAAUd,EAAMX,UAE1Bd,UAAU,WACVC,MAAO,CAAEuC,aAAc,MAAOJ,MAAO,OAAQC,OAAQ,QACrDI,SAAUZ,GAAS,GANrB,MAWF,yBAAK7B,UAAU,8CACb,uBAAGA,UAAU,0BAA0BoB,GACvC,wBAAIpB,UAAU,8BACZ,0BAAMA,UAAU,QAAhB,KACC4B,Q","file":"static/js/3.6cae8340.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport Product from './Product';\nimport Title from '../Title';\nimport { ProductContext } from '../../context';\nimport './SideNav.css';\n\nfunction ProductList() {\n  const context = useContext(ProductContext);\n\n  var products = context.products;\n\n  products = products.filter((item) => item.onShelf === true);\n\n  const [state, setState] = useState(products);\n  const [brands, setBrands] = useState([]);\n  const [tempBrands, setTempBrands] = useState([]);\n\n  const fetchData = useCallback(() => {\n    let newList = [];\n    products.forEach((item) => {\n      newList.push(item.company);\n    });\n    let x = (names) => names.filter((v, i) => names.indexOf(v) === i);\n    newList = x(newList);\n    setBrands(newList);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handleChange = (e) => {\n    // Variable to hold the filtered list before putting into state\n    let newList = [];\n\n    // If the search bar isn't empty\n    if (e.target.value !== '') {\n      newList = state.filter((item) => {\n        // change current item to lowercase\n        const lc = item.title.toLowerCase();\n        // change search term to lowercase\n        const filter = e.target.value.toLowerCase();\n        // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lxowercase eliminates\n        // issues with capitalization in search terms and search content\n        return lc.includes(filter);\n      });\n      setState(newList);\n    } else {\n      if (tempBrands.length !== 0) {\n        products.forEach((product) => {\n          if (tempBrands.includes(product.company)) {\n            newList.push(product);\n          }\n        });\n\n        setState(newList);\n      } else {\n        setState(products);\n      }\n    }\n    // Set the filtered state based on what our rules added to newList\n  };\n\n  const handleChangeCheck = (item) => {\n    let newList = [];\n\n    if (tempBrands.includes(item)) {\n      const index = tempBrands.indexOf(item);\n      let x = tempBrands;\n      x = x.filter(function (value, ind, arr) {\n        return ind !== index;\n      });\n      setTempBrands(x);\n\n      products.forEach((product) => {\n        if (tempBrands.includes(product.company)) {\n          newList.push(product);\n        }\n      });\n      setState(newList);\n\n      if (x.length === 0) {\n        setState(products);\n      }\n    } else {\n      const x = tempBrands;\n      x.push(item);\n      setTempBrands(x);\n\n      products.forEach((product) => {\n        if (tempBrands.includes(product.company)) {\n          newList.push(product);\n        }\n      });\n      setState(newList);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"py-5 row\">\n        <div className=\"sidenav row col-lg-2\" style={{ paddingTop: '10%' }}>\n          {brands.map((item) => {\n            return (\n              <React.Fragment key={item}>\n                <input\n                  type=\"checkbox\"\n                  name=\"onShelf\"\n                  className=\"col-lg-2\"\n                  onChange={() => {\n                    handleChangeCheck(item);\n                  }}\n                />\n                <label className=\"form-label col-lg-10\">{item}</label>\n              </React.Fragment>\n            );\n          })}\n        </div>\n        <div className=\"container col-lg-7\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={handleChange}\n            placeholder=\"Search...\"\n          />\n          <Title name=\"our\" title={'Products'} />\n          <div className=\"row\">\n            {brands.length === 0\n              ? products.map((product) => {\n                  return <Product key={product._id} product={product} />;\n                })\n              : state.map((product) => {\n                  return <Product key={product._id} product={product} />;\n                })}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default ProductList;\n","import React from 'react'\n\nexport default function Title(props) {\n    return (\n        <div className= \"row\">\n            <div className= \"text-title col-10 mx-auto my-2 text-center\">\n                <h1 className=\"text-capitalize font-weight-bold\">\n                    {props.name} <strong className = \"text-blue\">{props.title}</strong>\n                </h1>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport './Product.css';\nimport { Link } from 'react-router-dom';\nimport { ProductContext } from '../../context';\nimport PropTypes from 'prop-types';\n\nfunction Product(props) {\n  const { title, img, price, _id, stock } = props.product;\n  const context = useContext(ProductContext);\n  var x = process.env.REACT_APP_BACKEND_URL + 'products/' + img;\n  return (\n    <div className=\"col-9 mx-auto col-md-6 col-lg-3 my-3\">\n      <div className=\"card\">\n        <div className=\"img-container p-5\">\n          <Link to={'/details/' + _id.toString()}>\n            <img\n              src={x}\n              alt=\"product\"\n              className=\"card-img-top\"\n              style={{ width: '6rem', height: '6rem' }}\n            />\n          </Link>\n          <button\n            onClick={() => {\n              context.addToCart(props.product);\n            }}\n            className=\"cart-btn\"\n            style={{ borderRadius: '50%', width: '50px', height: '50px' }}\n            disabled={stock <= 0 ? true : false}\n          >\n            +\n          </button>\n        </div>\n        <div className=\"card-footer d-flex justify-content-between\">\n          <p className=\"align-self-center mb-0\">{title}</p>\n          <h5 className=\"text-blue font-italic mb-0\">\n            <span className=\"mr-1\">$</span>\n            {price}\n          </h5>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Product;\n"],"sourceRoot":""}
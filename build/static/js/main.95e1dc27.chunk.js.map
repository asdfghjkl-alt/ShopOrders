{"version":3,"sources":["auth-context.js","context.js","components/Navbar.js","components/RestrictedRoute.js","components/PrivateRoute.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["logoutTimer","AuthContext","React","createContext","AuthProvider","props","useState","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","admin","setAdmin","login","useCallback","uid","expirationDate","a","Date","getTime","axios","get","process","headers","Authorization","data","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","Provider","value","isLoggedIn","children","Consumer","ProductContext","ProductProvider","products","setProducts","cart","setCart","auth","useContext","searchForData","resExs","console","error","updateStock","x","Booking","post","log","product","_id","thing","toString","quantity","addToCart","decrement","Navbars","context","user","setUser","forEach","item","use","us","Navbar","bg","varient","expand","className","to","style","fontSize","Toggle","aria-controls","Collapse","id","Nav","color","name","onClick","RestrictedRoute","Component","component","rest","render","PrivateRoute","localData","Details","lazy","Cart","ProductAdd","ProductList","Login","Signup","ProductAll","App","fallback","path","exact","ProtectedRoute","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.95e1dc27.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nconst AuthContext = React.createContext();\n\nlet logoutTimer;\n\nfunction AuthProvider(props) {\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState('');\n  const [admin, setAdmin] = useState(false);\n\n  const login = useCallback(async (uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    if (token) {\n      const user = await axios.get(\n        process.env.REACT_APP_BACKEND_URL + 'users',\n        {\n          headers: { Authorization: 'Bearer ' + token },\n        }\n      );\n\n      if (user.data.admin === true) {\n        setAdmin(true);\n        localStorage.setItem(\n          'userData',\n          JSON.stringify({\n            admin: true,\n            userId: uid,\n            token: token,\n            expiration: tokenExpirationDate.toISOString(),\n          })\n        );\n      } else {\n        localStorage.setItem(\n          'userData',\n          JSON.stringify({\n            userId: uid,\n            token: token,\n            expiration: tokenExpirationDate.toISOString(),\n          })\n        );\n      }\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    setAdmin(false);\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        admin: admin,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nvar AuthConsumer = AuthContext.Consumer;\n\nexport { AuthProvider, AuthConsumer, AuthContext };\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './auth-context';\nconst ProductContext = React.createContext();\n\nfunction ProductProvider(props) {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const auth = useContext(AuthContext);\n\n  const searchForData = useCallback(async () => {\n    try {\n      let resExs = await axios.get(\n        process.env.REACT_APP_BACKEND_URL + 'products'\n      );\n      setProducts(resExs.data);\n      if (auth.token) {\n        resExs = await axios.get(process.env.REACT_APP_BACKEND_URL + 'orders', {\n          headers: { Authorization: 'Bearer ' + auth.token },\n        });\n        setCart(resExs.data.cart);\n      } else {\n        setCart([]);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [auth]);\n\n  const updateStock = async (x, Booking) => {\n    try {\n      await axios.post(x, Booking);\n    } catch (error) {\n      console.log(error);\n    }\n\n    searchForData();\n  };\n\n  useEffect(() => {\n    searchForData();\n  }, [auth.login, auth.token, auth.isLoggedIn, searchForData]);\n\n  async function addToCart(product) {\n    if (auth.token) {\n      let resExs = await axios.post(\n        process.env.REACT_APP_BACKEND_URL + 'orders/' + product._id,\n        '',\n        {\n          headers: { Authorization: 'Bearer ' + auth.token },\n        }\n      );\n\n      resExs = await axios.get(process.env.REACT_APP_BACKEND_URL + 'orders', {\n        headers: { Authorization: 'Bearer ' + auth.token },\n      });\n\n      setCart(resExs.data.cart);\n\n      var x = 'http://localhost:5000/products/update/' + product._id;\n      const Booking = {\n        thing: 1,\n      };\n      updateStock(x, Booking);\n    }\n  }\n\n  async function decrement(product) {\n    if (auth.token) {\n      try {\n        let resExs = await axios.post(\n          process.env.REACT_APP_BACKEND_URL + 'orders/decrease/' + product._id,\n          '',\n          {\n            headers: { Authorization: 'Bearer ' + auth.token.toString() },\n          }\n        );\n\n        resExs = await axios.get(process.env.REACT_APP_BACKEND_URL + 'orders', {\n          headers: { Authorization: 'Bearer ' + auth.token },\n        });\n\n        setCart(resExs.data.cart);\n\n        var x = 'http://localhost:5000/products/update/' + product._id;\n        const Booking = {\n          thing: -1,\n        };\n        updateStock(x, Booking);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  async function removeItem(product) {\n    if (auth.token) {\n      let resExs = await axios.post(\n        process.env.REACT_APP_BACKEND_URL +\n          `orders/remove/${product._id.toString()}`,\n        '',\n        {\n          headers: { Authorization: 'Bearer ' + auth.token },\n        }\n      );\n\n      resExs = await axios.get(process.env.REACT_APP_BACKEND_URL + 'orders', {\n        headers: { Authorization: 'Bearer ' + auth.token },\n      });\n\n      var x = 'http://localhost:5000/products/update/' + product._id;\n      const Booking = {\n        thing: product.quantity,\n      };\n      setCart(resExs.data.cart);\n      updateStock(x, Booking);\n    }\n  }\n\n  // function addTotals() {\n  //   let subTotal = 0;\n  //   cart.map((item) => {\n  //     subTotal += item.quantity * item.price;\n  //   });\n  //   const tempTax = subTotal / 11;\n  //   const tax = parseFloat(tempTax.toFixed(2));\n  //   setCartSubTotal(subTotal);\n  //   setCartTax(tax);\n  //   setCartTotal(subTotal);\n  // }\n\n  return (\n    <ProductContext.Provider\n      value={{\n        products: products,\n        cart: cart,\n        addToCart: addToCart,\n        decrement: decrement,\n        removeItem: removeItem,\n        searchForData: searchForData,\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nvar ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer, ProductContext };\n","import React, { useContext, useState, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link } from 'react-router-dom';\nimport { ProductContext } from '../context';\nimport { AuthContext } from '../auth-context';\nimport axios from 'axios';\nimport './Button.css';\nimport './Navbar.css';\n\nfunction Navbars() {\n  const context = useContext(ProductContext);\n  var x = 0;\n\n  const auth = useContext(AuthContext);\n\n  const [user, setUser] = useState({});\n\n  context.cart.forEach((item) => {\n    x += item.quantity;\n  });\n\n  useEffect(() => {\n    const use = async () => {\n      const us = await axios.get(process.env.REACT_APP_BACKEND_URL + 'users', {\n        headers: { Authorization: 'Bearer ' + auth.token },\n      });\n      setUser(us.data);\n    };\n    if (auth.token) {\n      use();\n    } else {\n      setUser({});\n    }\n  }, [auth]);\n\n  return (\n    <Navbar bg=\"primary\" varient=\"dark\" expand=\"lg\" className=\"navbars\">\n      <Link to=\"/\">\n        <i\n          className=\"fas fa-leaf navbar-brand\"\n          style={{ fontSize: '300%' }}\n        ></i>\n      </Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-5\">\n          <Link\n            to=\"/fruit\"\n            className=\"nav-link\"\n            style={{ color: 'chartreuse' }}\n          >\n            <i className=\"fas fa-apple-alt\"></i> Fruit\n          </Link>\n          <Link to=\"/vegetables\" className=\"nav-link\">\n            <i className=\"fas fa-lemon\"></i> Vegetables\n          </Link>\n          {auth.admin && (\n            <Link to=\"/add\" className=\"nav-link\" style={{ color: 'red' }}>\n              <i className=\"fas fa-plus\" style={{ color: 'red' }}></i> Products\n              add\n            </Link>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n      <Link to=\"/cart\" className=\"ml-auto\">\n        <button className=\"button\" style={{ color: 'yellow' }}>\n          {user.name} Cart{' '}\n          <span className=\"mr-2\">\n            <i className=\"fa\" style={{ fontSize: '24px' }}>\n              &#xf07a;\n            </i>\n            <span className=\"badge badge-warning\" id=\"lblCartCount\">\n              {' '}\n              {x}{' '}\n            </span>\n          </span>\n        </button>\n      </Link>\n      {auth.isLoggedIn ? (\n        <p></p>\n      ) : (\n        <Link to=\"/signup\" className=\"ml-auto\">\n          <button className=\"button\">\n            <span className=\"mr-2\">Signup</span>\n          </button>\n        </Link>\n      )}\n      {auth.isLoggedIn ? (\n        <Link className=\"ml-auto\" to=\"/\">\n          <button\n            className=\"button\"\n            onClick={auth.logout}\n            style={{ color: 'red' }}\n          >\n            <span className=\"mr-2\">Logout</span>\n          </button>\n        </Link>\n      ) : (\n        <Link to=\"/login\" className=\"ml-auto\">\n          <button className=\"button\">\n            <span className=\"mr-2\">Login</span>\n          </button>\n        </Link>\n      )}\n    </Navbar>\n  );\n}\n\nexport default Navbars;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RestrictedRoute = ({ component: Component, ...rest }) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem('userData') ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default RestrictedRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem('userData') ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/signup\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RestrictedRoute = ({ component: Component, ...rest }) => {\n  const localData = JSON.parse(localStorage.getItem('userData'));\n\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        localData.admin ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default RestrictedRoute;\n","import React, { Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Navbars from './components/Navbar';\nimport RestrictedRoute from './components/RestrictedRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nconst Details = React.lazy(() => import('./components/Details'));\nconst Cart = React.lazy(() => import('./components/Cart'));\nconst ProductAdd = React.lazy(() => import('./components/Product/ProductAdd'));\nconst ProductList = React.lazy(() =>\n  import('./components/Product/ProductList')\n);\nconst Login = React.lazy(() => import('./components/Login'));\nconst Signup = React.lazy(() => import('./components/Signup'));\nconst ProductAll = React.lazy(() => import('./components/Product/AllProduct'));\n\nfunction App() {\n  return (\n    <Router>\n      <Navbars />\n      <Suspense fallback={<div></div>}>\n        <Switch>\n          <Route path=\"/\" exact component={ProductAll} />\n          <Route exact path=\"/details/:detailproduct\" component={Details} />\n          <ProtectedRoute exact path=\"/add\" component={ProductAdd} />\n          <PrivateRoute exact path=\"/cart\" component={Cart} />\n          <RestrictedRoute exact path=\"/signup\" component={Signup} />\n          <RestrictedRoute exact path=\"/login\" component={Login} />\n          <Route\n            exact\n            path=\"/fruit\"\n            component={() => <ProductList value=\"fruit\" />}\n          />\n          <Route\n            exact\n            path=\"/vegetables\"\n            component={() => <ProductList value=\"vegetable\" />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ProductProvider } from \"./context.js\";\nimport { AuthProvider } from \"./auth-context\";\n\nReactDOM.render(\n  <AuthProvider>\n    <ProductProvider>\n      <Router>\n        <App />\n      </Router>\n    </ProductProvider>\n  </AuthProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["auth-context.js","context.js","components/Navbar.js","components/Routes/RestrictedRoute.js","components/Routes/PrivateRoute.js","components/Routes/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["logoutTimer","AuthContext","React","createContext","AuthProvider","props","useState","token","setToken","tokenExpirationDate","setTokenExpirationDate","userId","setUserId","admin","setAdmin","login","useCallback","uid","expirationDate","a","Date","getTime","axios","get","process","headers","Authorization","data","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","Provider","value","isLoggedIn","children","Consumer","ProductContext","ProductProvider","products","setProducts","cart","setCart","auth","useContext","searchForData","resExs","localData","length","console","error","updateStock","Booking","id","post","toString","log","product","updatedItemIndex","findIndex","item","productId","_id","push","quantity","updatedItem","splice","addToCart","decrement","removeAll","Navbars","context","x","user","setUser","forEach","use","us","Navbar","bg","varient","expand","className","to","style","fontSize","Toggle","aria-controls","Collapse","Nav","Fragment","color","name","onClick","RestrictedRoute","Component","component","rest","render","PrivateRoute","Details","lazy","Cart","ProductAdd","ProductList","Login","Signup","ProductAll","UserAll","UserEdit","Pay","GetOrders","App","fallback","path","exact","ProtectedRoute","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4efc2062.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nconst AuthContext = React.createContext();\n\nlet logoutTimer;\n\nfunction AuthProvider(props) {\n  const [token, setToken] = useState(null);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState('');\n  const [admin, setAdmin] = useState(false);\n\n  const login = useCallback(async (uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    if (token) {\n      const user = await axios.get(\n        process.env.REACT_APP_BACKEND_URL + 'users',\n        {\n          headers: { Authorization: 'Bearer ' + token },\n        }\n      );\n\n      if (user.data.admin === true) {\n        setAdmin(true);\n        localStorage.setItem(\n          'userData',\n          JSON.stringify({\n            admin: true,\n            userId: uid,\n            token: token,\n            expiration: tokenExpirationDate.toISOString(),\n          })\n        );\n      } else {\n        localStorage.setItem(\n          'userData',\n          JSON.stringify({\n            userId: uid,\n            token: token,\n            expiration: tokenExpirationDate.toISOString(),\n          })\n        );\n      }\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n    setAdmin(false);\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        admin: admin,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n}\n\nvar AuthConsumer = AuthContext.Consumer;\n\nexport { AuthProvider, AuthConsumer, AuthContext };\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './auth-context';\nconst ProductContext = React.createContext();\n\nfunction ProductProvider(props) {\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const auth = useContext(AuthContext);\n\n  const searchForData = useCallback(async () => {\n    try {\n      let resExs = await axios.get(\n        process.env.REACT_APP_BACKEND_URL + 'products'\n      );\n      setProducts(resExs.data);\n      let localData = localStorage.getItem('cart');\n      localData = JSON.parse(localData);\n      if (!localData) {\n        setCart([]);\n        localStorage.setItem('cart', JSON.stringify([]));\n      } else if (localData.length > 0) {\n        setCart(localData);\n        localStorage.setItem('cart', JSON.stringify(localData));\n      } else {\n        setCart([]);\n        localStorage.setItem('cart', JSON.stringify([]));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const updateStock = async (Booking, id) => {\n    try {\n      await axios.post(\n        process.env.REACT_APP_BACKEND_URL + '/products/update/' + id.toString(),\n        Booking\n      );\n    } catch (error) {\n      console.log(error);\n    }\n\n    searchForData();\n  };\n\n  useEffect(() => {\n    searchForData();\n  }, [auth.login, auth.token, auth.isLoggedIn, searchForData, cart]);\n\n  async function addToCart(product) {\n    let localData = localStorage.getItem('cart');\n    localData = JSON.parse(localData);\n\n    const updatedItemIndex = localData.findIndex((item) => {\n      return item.productId._id.toString() === product._id.toString();\n    });\n\n    if (updatedItemIndex < 0 || localData.length === 0) {\n      localData.push({ productId: product, quantity: 1 });\n    } else {\n      const updatedItem = localData[updatedItemIndex];\n\n      updatedItem.quantity += 1;\n\n      localData[updatedItemIndex] = updatedItem;\n    }\n\n    localStorage.setItem('cart', JSON.stringify(localData));\n\n    setCart(localData);\n\n    // var x = 'http://localhost:5000/products/update/' + product._id;\n    // const Booking = {\n    //   thing: 1,\n    // };\n    // updateStock(x, Booking);\n  }\n\n  async function decrement(product) {\n    let localData = localStorage.getItem('cart');\n    localData = JSON.parse(localData);\n\n    const updatedItemIndex = localData.findIndex((item) => {\n      return item.productId._id.toString() === product._id.toString();\n    });\n\n    if (updatedItemIndex > -1) {\n      const updatedItem = localData[updatedItemIndex];\n\n      updatedItem.quantity -= 1;\n\n      localData[updatedItemIndex] = updatedItem;\n\n      if (updatedItem.quantity === 0) {\n        localData.splice(updatedItemIndex, 1);\n      }\n\n      localStorage.setItem('cart', JSON.stringify(localData));\n    }\n\n    setCart([...localData]);\n  }\n\n  async function removeItem(product) {\n    let localData = localStorage.getItem('cart');\n    localData = JSON.parse(localData);\n\n    const updatedItemIndex = localData.findIndex((item) => {\n      return item.productId._id.toString() === product._id.toString();\n    });\n\n    localData.splice(updatedItemIndex, 1);\n\n    localStorage.setItem('cart', JSON.stringify(localData));\n\n    setCart([...localData]);\n  }\n\n  async function removeAll() {\n    localStorage.setItem('cart', JSON.stringify([]));\n\n    setCart([]);\n  }\n\n  // function addTotals() {\n  //   let subTotal = 0;\n  //   cart.map((item) => {\n  //     subTotal += item.quantity * item.price;\n  //   });\n  //   const tempTax = subTotal / 11;\n  //   const tax = parseFloat(tempTax.toFixed(2));\n  //   setCartSubTotal(subTotal);\n  //   setCartTax(tax);\n  //   setCartTotal(subTotal);\n  // }\n\n  return (\n    <ProductContext.Provider\n      value={{\n        products: products,\n        cart: cart,\n        addToCart: addToCart,\n        decrement: decrement,\n        removeItem: removeItem,\n        searchForData: searchForData,\n        removeAll: removeAll,\n        updateStock: updateStock,\n      }}\n    >\n      {props.children}\n    </ProductContext.Provider>\n  );\n}\n\nvar ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer, ProductContext };\n","import React, { useContext, useState, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link } from 'react-router-dom';\nimport { ProductContext } from '../context';\nimport { AuthContext } from '../auth-context';\nimport axios from 'axios';\nimport './Button.css';\nimport './Navbar.css';\n\nfunction Navbars() {\n  const context = useContext(ProductContext);\n  var x = 0;\n\n  const auth = useContext(AuthContext);\n\n  const [user, setUser] = useState({});\n\n  context.cart.forEach((item) => {\n    x += item.quantity;\n  });\n\n  useEffect(() => {\n    const use = async () => {\n      const us = await axios.get(process.env.REACT_APP_BACKEND_URL + 'users', {\n        headers: { Authorization: 'Bearer ' + auth.token },\n      });\n      setUser(us.data);\n    };\n    if (auth.token) {\n      use();\n    } else {\n      setUser({});\n    }\n  }, [auth]);\n\n  return (\n    <Navbar bg=\"primary\" varient=\"dark\" expand=\"lg\" className=\"navbars\">\n      <Link to=\"/\">\n        <i\n          className=\"fas fa-leaf navbar-brand\"\n          style={{ fontSize: '300%' }}\n        ></i>\n      </Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-5\">\n          <Link to=\"/fruit\" className=\"nav-link\">\n            <i className=\"fas fa-apple-alt\"></i> Fruit\n          </Link>\n          <Link to=\"/vegetables\" className=\"nav-link\">\n            <i className=\"fas fa-lemon\"></i> Vegetables\n          </Link>\n          {auth.admin && (\n            <React.Fragment>\n              <Link to=\"/add\" className=\"nav-link\" style={{ color: 'red' }}>\n                <i className=\"fas fa-plus\" style={{ color: 'red' }}></i>{' '}\n                Products add\n              </Link>\n              <Link to=\"/users\" className=\"nav-link\" style={{ color: 'red' }}>\n                <i className=\"fas fa-edit\" style={{ color: 'red' }}></i> Users\n              </Link>\n            </React.Fragment>\n          )}\n          {auth.isLoggedIn && (\n            <React.Fragment>\n              <Link\n                to=\"/useredit\"\n                className=\"nav-link\"\n                style={{ color: 'red' }}\n              >\n                <i className=\"fas fa-sign\" style={{ color: 'red' }}></i> Users\n                edit\n              </Link>\n              <Link\n                to=\"/getorders\"\n                className=\"nav-link\"\n                style={{ color: 'green' }}\n              >\n                <i\n                  className=\"fas fa-money-check-alt\"\n                  style={{ color: 'green' }}\n                ></i>{' '}\n                My Orders\n              </Link>\n            </React.Fragment>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n      <Link to=\"/cart\" className=\"ml-auto\">\n        <button className=\"button\" style={{ color: 'yellow' }}>\n          {user.name} Cart{' '}\n          <span className=\"mr-2\">\n            <i className=\"fa\" style={{ fontSize: '24px' }}>\n              &#xf07a;\n            </i>\n            <span className=\"badge badge-warning\" id=\"lblCartCount\">\n              {' '}\n              {x}{' '}\n            </span>\n          </span>\n        </button>\n      </Link>\n      {auth.isLoggedIn ? (\n        <p></p>\n      ) : (\n        <Link to=\"/signup\" className=\"ml-auto\">\n          <button className=\"button\">\n            <span className=\"mr-2\">Signup</span>\n          </button>\n        </Link>\n      )}\n      {auth.isLoggedIn ? (\n        <Link className=\"ml-auto\" to=\"/\">\n          <button\n            className=\"button\"\n            onClick={auth.logout}\n            style={{ color: 'red' }}\n          >\n            <span className=\"mr-2\">Logout</span>\n          </button>\n        </Link>\n      ) : (\n        <Link to=\"/login\" className=\"ml-auto\">\n          <button className=\"button\">\n            <span className=\"mr-2\">Login</span>\n          </button>\n        </Link>\n      )}\n    </Navbar>\n  );\n}\n\nexport default Navbars;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RestrictedRoute = ({ component: Component, ...rest }) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem('userData') ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default RestrictedRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem('userData') ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/signup\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst RestrictedRoute = ({ component: Component, ...rest }) => {\n  const localData = JSON.parse(localStorage.getItem('userData'));\n\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={(props) =>\n        localData.admin ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default RestrictedRoute;\n","import React, { Suspense } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Navbars from './components/Navbar';\nimport RestrictedRoute from './components/Routes/RestrictedRoute';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport ProtectedRoute from './components/Routes/ProtectedRoute';\n\nconst Details = React.lazy(() => import('./components/Details'));\nconst Cart = React.lazy(() => import('./components/Cart'));\nconst ProductAdd = React.lazy(() => import('./components/Product/ProductAdd'));\nconst ProductList = React.lazy(() =>\n  import('./components/Product/ProductList')\n);\nconst Login = React.lazy(() => import('./components/User/Login'));\nconst Signup = React.lazy(() => import('./components/User/Signup'));\nconst ProductAll = React.lazy(() => import('./components/Product/AllProduct'));\nconst UserAll = React.lazy(() => import('./components/User/Users'));\nconst UserEdit = React.lazy(() => import('./components/User/AboutUser'));\nconst Pay = React.lazy(() => import('./components/Cart/Pay'));\nconst GetOrders = React.lazy(() => import('./components/Orders/GetOrders'));\n\nfunction App() {\n  return (\n    <Router>\n      <Navbars />\n      <Suspense fallback={<div></div>}>\n        <Switch>\n          <Route path=\"/\" exact component={ProductAll} />\n          <Route exact path=\"/details/:detailproduct\" component={Details} />\n          <ProtectedRoute exact path=\"/add\" component={ProductAdd} />\n          <ProtectedRoute exact path=\"/users\" component={UserAll} />\n          <Route exact path=\"/cart\" component={Cart} />\n          <PrivateRoute exact path=\"/pay\" component={Pay} />\n          <PrivateRoute exact path=\"/useredit\" component={UserEdit} />\n          <PrivateRoute exact path=\"/getorders\" component={GetOrders} />\n          <RestrictedRoute exact path=\"/signup\" component={Signup} />\n          <RestrictedRoute exact path=\"/login\" component={Login} />\n          <Route\n            exact\n            path=\"/fruit\"\n            component={() => <ProductList value=\"fruit\" />}\n          />\n          <Route\n            exact\n            path=\"/vegetables\"\n            component={() => <ProductList value=\"vegetable\" />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ProductProvider } from \"./context.js\";\nimport { AuthProvider } from \"./auth-context\";\n\nReactDOM.render(\n  <AuthProvider>\n    <ProductProvider>\n      <Router>\n        <App />\n      </Router>\n    </ProductProvider>\n  </AuthProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}